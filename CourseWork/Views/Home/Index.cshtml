<div class="surface-container">
    <div class="col-xs-3">
        <div class="text-center">    
            <img src="~/images/logo.png" style="height:150px;"/>
            <h2 class="text-center">Graphic creator</h2>
        </div>

        <div class="controls form-group">
            <div class="form-group">
                <label>X start:</label>
                <input class="form-control" name="xStart" type="number" value="-100" />
            </div>
            <div class="form-group">
                <label>X end:</label>
                <input class="form-control" name="xEnd" type="number" value="100" />
            </div>
            <div class="form-group">
                <label>Y start:</label>
                <input class="form-control" name="yStart" type="number" value="-20" />
            </div>
            <div class="form-group">
                <label>Y end:</label>
                <input class="form-control" name="yEnd" type="number" value="20" />
            </div>
            <div class="form-group">
                <label>Step</label>
                <input class="form-control" name="step" type="number" value="3" />
            </div>
            <div class="form-group">
                <button id="calc-btn" class="btn btn-success">Calculate</button>
            </div>
            <div class="form-group">
                <label>Area:</label>
                <input class="form-control" name="area" type="number" disabled />
            </div>
            <div class="form-group">
                <label>Fault:</label>
                <input class="form-control" name="fault" disabled />
            </div>
        </div>
    </div>


    <div id="plot" class="col-xs-8"></div>
</div>

<div id="chart"></div>



@section Scripts
{
    <script>
        window.onload = () => {
            let btn = document.getElementById("calc-btn");
            Plotly.newPlot("plot", [{ type: 'mesh3d',x: [0], y:[0], z:[0]}], {}, { showSendToCloud: true });

            btn.addEventListener("click", _ => {

                let xStart = document.querySelector('input[name="xStart"]').value;
                let xEnd = document.querySelector('input[name="xEnd"]').value;
                let yStart = document.querySelector('input[name="yStart"]').value;
                let yEnd = document.querySelector('input[name="yEnd"]').value;
                let step = document.querySelector('input[name="step"]').value;                

                new Promise((resolve, reject) => {

                    $.ajax({
                        url: '@Url.Action("GetPoints", "Home")',
                        data: {
                            xStart: xStart,
                            xEnd: xEnd,
                            yStart: yStart,
                            yEnd: yEnd,
                            step: step
                        },
                        success: response => {

                            if (response.status) {

                                let pointForPlot = optimizePointArrForPlot(response.result);
                                drawSurface(pointForPlot);

                                resolve();
                            }
                            else {
                                reject(response.msg);
                            }

                        },
                        error: _ => reject()
                    });
                }).then(_ => {

                    $.ajax({
                        url: '@Url.Action("GetArea", "Home")',

                        data: {
                            xStart: xStart,
                            xEnd: xEnd,
                            yStart: yStart,
                            yEnd: yEnd,
                            step: step
                        },
                        success: response => {

                            if (response.status) {

                                drawChart(response.result);

                                let area = document.querySelector('input[name="area"]');
                                area.value = response.result[0].areaResult;

                                let fault = document.querySelector('input[name="fault"]');
                                fault.value = Math.abs(100 - response.result[0].areaResult / 269638699.40489507 * 100).toFixed(3) + "%";
                            }
                            else {
                                throw Exception(response.msg);
                            }


                        }
                    });
                }).catch(err => console.log(err)); 
            });



            function optimizePointArrForPlot(pointArr) {

                let xArr = [];
                let yArr = [];
                let zArr = [];
                              
                let step = pointArr.length >= 2000 ? parseInt(pointArr.length / 1000) : 1;

                for (let i = 0; i < pointArr.length; i += step) {

                    xArr.push(pointArr[i].x);
                    yArr.push(pointArr[i].y);
                    zArr.push(pointArr[i].z);
                }

                return { xArr, yArr, zArr };
            }

            function drawSurface(pointsForPlot) {
                
                let data = [{
                    opacity: 0.8,
                    color: 'rgb(0,255,0)',
                    type: 'mesh3d',
                    x: pointsForPlot.xArr,
                    y: pointsForPlot.yArr,
                    z: pointsForPlot.zArr
                }];

                Plotly.newPlot("plot", data, {}, { showSendToCloud: true });
            }

            function drawChart(result) {
               
                let data = [
                    {
                        x: result.map(x => x.maxCountThreads),
                        y: result.map(x => x.timeInMs),
                        type: 'bar',
                        marker: {
                            color: '#4de04d'
                        }

                    }
                ];
                Plotly.newPlot('chart', data, { title: 'Time in milliseconds' });
            }
        }
        
    </script>
}
